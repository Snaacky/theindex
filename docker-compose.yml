version: '3.3'
services:
  web:
    image: ranimepiracy/index
    container_name: index-web
    restart: unless-stopped
    ports:
      - 3000:3000
    environment:
      NEXT_PUBLIC_SITE_NAME: ${NEXT_PUBLIC_SITE_NAME}

      # domain url for sessions
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXT_PUBLIC_DOMAIN: ${NEXT_PUBLIC_DOMAIN}

      # provide your own url to your own db setup
      DATABASE_URL: ${DATABASE_URL}

      # pass your own running chrome instance
      CHROME_URL: ${CHROME_URL}

      AUDIT_WEBHOOK: ${AUDIT_WEBHOOK}

      # OAuth2
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}

      # Setup login whitelist
      SETUP_WHITELIST_DISCORD_ID: ${SETUP_WHITELIST_DISCORD_ID}
    depends_on:
      - mongo
      - meili
      - chrome

  mongo:
    image: mongo
    container_name: index-db
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - ./db:/data/db

  meili:
    image: getmeili/meilisearch
    container_name: index-meili
    restart: unless-stopped
    ports:
      - 7700:7700
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}

  chrome:
    image: browserless/chrome
    container_name: index-chrome
    restart: unless-stopped
    ports:
      - 3300:3000

  # this will not run if not explicitly called via docker-compose --profile dev
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    profiles:
      - 'dev'
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_SITE_GRIDFS_ENABLED: 'true'
    depends_on:
      - mongo
